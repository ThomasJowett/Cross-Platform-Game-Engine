file(GLOB ENGINE_FILES
    src/AI/Astar.cpp
    src/AI/Astar.h
    src/AI/BehaviorTree.h
    src/AI/BehaviourTreeSerializer.cpp
    src/AI/BehaviourTreeSerializer.h
    src/AI/Decorators.h
    src/AI/StateMachi.en.cpp
    src/AI/StateMachine.h
    src/AI/Tasks.cpp
    src/AI/Tasks.h
    src/Animation/Animation.cpp
    src/Animation/Animation.h
    src/Core/Application.cpp
    src/Core/Application.h
    src/Core/BoundingBox.cpp
    src/Core/BoundingBox.h
    src/Core/Factory.h
    src/Core/Input.cpp
    src/Core/Input.h
    src/Core/Joysticks.cpp
    src/Core/Joysticks.h
    src/Core/Layer.cpp
    src/Core/Layer.h
    src/Core/LayerStack.cpp
    src/Core/LayerStack.h
    src/Core/Settings.cpp
    src/Core/Settings.h
    src/Core/Window.cpp
    src/Core/Window.h
    src/Core/Asset.h
    src/Core/Colour.h
    src/Core/KeyCodes.h
    src/Core/Version.h
    src/Events/ApplicationEvent.h
    src/Events/Event.cpp
    src/Events/Event.h
    src/Events/JoystickEvent.h
    src/Events/KeyEvent.h
    src/Events/MouseEvent.h
    src/Events/SceneEvent.h
    src/ImGui/ImGuiBuildDirectX11.cpp
    src/ImGui/ImGuiBuildGlfw.cpp
    src/ImGui/ImGuiManager.cpp
    src/ImGui/ImGuiManager.h
    src/ImGui/ImGuiUtilites.h
    src/ImGui/ImGuiUtilities.cpp
    src/Logging/Debug.h
    src/Logging/Instrumentor.h
    src/Logging/InternalConsoleSink.cpp
    src/Logging/InternalConsoleSink.h
    src/Logging/Logger.cpp
    src/Logging/Logger.h
    src/Logging/Timer.h
    src/ParticleSystem/ParticleSystem.cpp
    src/ParticleSystem/ParticleSystem.h
    src/Physics/Contact2D.h
    src/Physics/HitResult2D.h
    src/Physics/PhysicsEngine2D.cpp
    src/Physics/PhysicsEngine2D.h
    src/Physics/PhysicsMaterial.cpp
    src/Physics/PhysicsMaterial.h
    src/Platform/Windows/glfwInput.cpp
    src/Platform/Windows/glfwInput.h
    src/Platform/Windows/glfwWindow.cpp
    src/Platform/Windows/glfwWindow.h
    src/Renderer/Buffer.cpp
    src/Renderer/Buffer.h
    src/Renderer/Camera.h
    src/Renderer/Font.cpp
    src/Renderer/Font.h
    src/Renderer/FrameBuffer.cpp
    src/Renderer/FrameBuffer.h
    src/Renderer/GraphicsContext.h
    src/Renderer/Material.cpp
    src/Renderer/Material.h
    src/Renderer/Pipeline.cpp
    src/Renderer/Pipeline.h
    src/Renderer/RenderCommand.cpp
    src/Renderer/RenderCommand.h
    src/Renderer/RendererAPI.h
    src/Renderer/SubTexture2D.cpp
    src/Renderer/SubTexture2D.h
    src/Renderer/UniformBuffer.cpp
    src/Renderer/UniformBuffer.h
    src/Renderer/Renderer.cpp
    src/Renderer/Renderer.h
    src/Renderer/RendererAPI.cpp
    src/Renderer/RendererAPI.h
    src/Renderer/Renderer2D.cpp
    src/Renderer/Renderer2D.h
    src/Renderer/Shader.cpp
    src/Renderer/Shader.h
    src/Renderer/Texture.cpp
    src/Renderer/Texture.h
    src/Renderer/Font.cpp
    src/Renderer/Font.h
    src/Renderer/Mesh.cpp
    src/Renderer/Mesh.h
    src/Renderer/SpriteSheet.cpp
    src/Renderer/SpriteSheet.h
    src/Renderer/StaticMesh.cpp
    src/Renderer/StaticMesh.h
    src/Renderer/Tileset.cpp
    src/Renderer/Tileset.h
    src/Renderer/UI/MSDFData.h
    src/Scene/AssetManager.cpp
    src/Scene/AssetManager.h
    src/Scene/Components.h
    src/Scene/Entity.cpp
    src/Scene/Entity.h
    src/Scene/Scene.cpp
    src/Scene/Scene.h
    src/Scene/SceneCamera.cpp
    src/Scene/SceneCamera.h
    src/Scene/SceneGraph.cpp
    src/Scene/SceneGraph.h
    src/Scene/SceneManager.cpp
    src/Scene/SceneManager.h
    src/Scene/SceneSerializer.cpp
    src/Scene/SceneSerializer.h
    src/Scene/Components/AnimatedSpriteComponent.cpp
    src/Scene/Components/AnimatedSpriteComponent.h
    src/Scene/Components/BehaviourTreeComponent.h
    src/Scene/Components/BillboardComponent.h
    src/Scene/Components/BoxCollider2DComponent.h
    src/Scene/Components/CameraComponent.h
    src/Scene/Components/CanvasComponent.h
    src/Scene/Components/CapsuleCollider2DComponent.h
    src/Scene/Components/CircleCollider2DComponent.h
    src/Scene/Components/CircleRendererComponent.h
    src/Scene/Components/HierarchyComponent.h
    src/Scene/Components/IDComponent.h
    src/Scene/Components/LuaScriptComponent.cpp
    src/Scene/Components/LuaScriptComponent.h
    src/Scene/Components/NameComponent.h
    src/Scene/Components/PointLightComponent.h
    src/Scene/Components/PolygonCollider2DComponent.h
    src/Scene/Components/PrimitiveComponent.h
    src/Scene/Components/RigidBody2DComponent.cpp
    src/Scene/Components/RigidBody2DComponent.h
    src/Scene/Components/SpriteComponent.h
    src/Scene/Components/StateMachineComponent.h
    src/Scene/Components/StaticMeshComponent.h
    src/Scene/Components/TextComponent.h
    src/Scene/Components/TilemapComponent.cpp
    src/Scene/Components/TilemapComponent.h
    src/Scene/Components/TransformComponent.h
    src/Scene/Components/UIWidgets/ButtonComponent.h
    src/Scene/Components/UIWidgets/Widget.h
    src/Scripting/Lua/LuaBindings.cpp
    src/Scripting/Lua/LuaBindings.h
    src/Scripting/Lua/LuaManager.cpp
    src/Scripting/Lua/LuaManager.h
    src/Utilities/Box2DDebugDraw.cpp
    src/Utilities/Box2DDebugDraw.h
    src/Utilities/FileUtils.cpp
    src/Utilities/FileUtils.h
    src/Utilities/FileWatcher.h
    src/Utilities/GeometryGenerator.h
    src/Utilities/GeometryGenerator.cpp
    src/Utilities/MathUtils.cpp
    src/Utilities/MathUtils.h
    src/Utilities/Random.h
    src/Utilities/SerializationUtils.h
    src/Utilities/SerializationUtils.cpp
    src/Utilities/StringUtils.h
    src/Utilities/Triangulation.cpp
    src/Utilities/Triangulation.h
)

if(WIN32)
    file(GLOB DIRECTX_FILES
        src/Platform/DirectX/DirectX11Buffer.cpp
        src/Platform/DirectX/DirectX11Buffer.h
        src/Platform/DirectX/DirectX11FrameBuffer.cpp
        src/Platform/DirectX/DirectX11FrameBuffer.h
        src/Platform/DirectX/DirectX11RendererAPI.cpp
        src/Platform/DirectX/DirectX11RendererAPI.h
        src/Platform/DirectX/DirectX11Texture.cpp
        src/Platform/DirectX/DirectX11Texture.h
        src/Platform/DirectX/DirectX11Context.cpp
        src/Platform/DirectX/DirectX11Context.h
        src/Platform/DirectX/DirectX11Pipeline.cpp
        src/Platform/DirectX/DirectX11Pipeline.h
        src/Platform/DirectX/DirectX11Shader.cpp
        src/Platform/DirectX/DirectX11Shader.h
        src/Platform/DirectX/DirectX11UniformBuffer.cpp
        src/Platform/DirectX/DirectX11UniformBuffer.h
    )
endif()

file (GLOB OPENGL_FILES
    src/Platform/OpenGL/OpenGLBuffer.cpp
    src/Platform/OpenGL/OpenGLBuffer.h
    src/Platform/OpenGL/OpenGLFrameBuffer.cpp
    src/Platform/OpenGL/OpenGLFrameBuffer.h
    src/Platform/OpenGL/OpenGLRendererAPI.cpp
    src/Platform/OpenGL/OpenGLRendererAPI.h
    src/Platform/OpenGL/OpenGLTexture.cpp
    src/Platform/OpenGL/OpenGLTexture.h
    src/Platform/OpenGL/OpenGLVertexArray.cpp
    src/Platform/OpenGL/OpenGLVertexArray.h
    src/Platform/OpenGL/OpenGLContext.cpp
    src/Platform/OpenGL/OpenGLContext.h
    src/Platform/OpenGL/OpenGLPipeline.cpp
    src/Platform/OpenGL/OpenGLPipeline.h
    src/Platform/OpenGL/OpenGLShader.cpp
    src/Platform/OpenGL/OpenGLShader.h
    src/Platform/OpenGL/OpenGlUniformBuffer.cpp
    src/Platform/OpenGL/OpenGlUniformBuffer.h
)

file (GLOB VULKAN_FILES
    src/Platform/Vulkan/VulkanBuffer.cpp
    src/Platform/Vulkan/VulkanBuffer.h
    src/Platform/Vulkan/VulkanDevice.cpp
    src/Platform/Vulkan/VulkanDevice.h
    src/Platform/Vulkan/VulkanRendererAPI.cpp
    src/Platform/Vulkan/VulkanRendererAPI.h
    src/Platform/Vulkan/VulkanTexture.cpp
    src/Platform/Vulkan/VulkanTexture.h
    src/Platform/Vulkan/VulkanContext.cpp
    src/Platform/Vulkan/VulkanContext.h
    src/Platform/Vulkan/VulkanFrameBuffer.cpp
    src/Platform/Vulkan/VulkanFrameBuffer.h
    src/Platform/Vulkan/VulkanShader.cpp
    src/Platform/Vulkan/VulkanShader.h
    src/Platform/Vulkan/VulkanUniformBuffer.cpp
    src/Platform/Vulkan/VulkanUniformBuffer.h
)

add_compile_options("$<$<CONFIG:DEBUG>:-DDEBUG>" "$<$<CONFIG:DEBUG>:-DENABLE_ASSERTS>")

add_library(Engine ${ENGINE_FILES} ${DIRECTX_FILES} ${OPENGL_FILES} ${VULKAN_FILES} ${CMAKE_CURRENT_SOURCE_DIR}/vendor/stb/stb.cpp)

group_files_by_directory("ENGINE_FILES")
group_files_by_directory("DIRECTX_FILES")
group_files_by_directory("OPENGL_FILES")
group_files_by_directory("VULKAN_FILES")

target_link_libraries(Engine PRIVATE
                      opengl32
                      ${Vulkan_LIBRARY}
                      glfw
                      glad
                      imgui
                      tinyxml2
                      lua
                      box2d
                      msdf-atlas-gen
                      )

add_definitions(
    -DGLFW_INCLUDE_NONE
    -D_CRT_SECURE_NO_WARNINGS
    -DUNICODE
)

if (MSVC)
    target_compile_options(Engine PRIVATE "/bigobj")
else ()
  add_compile_options(-Wa,-mbig-obj)
endif ()

target_include_directories(Engine PUBLIC
                            src
                            vendor
                            vendor/GLFW/include
                            vendor/GLFW/deps
                            vendor/GLAD/include
                            vendor/spdlog/include
                            vendor/cereal/include
                            vendor/box2d/include
                            vendor/lua
                            vendor/imgui
                            vendor/stb
                            vendor/simpleini
                            vendor/EnTT
                            vendor/msdf-atlas-gen/msdf-atlas-gen
                            vendor/msdf-atlas-gen/msdfgen

        )

target_precompile_headers(Engine PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/src/stdafx.h)